
var MLibelf = (function() {
  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;
  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;
  return (
function(MLibelf) {
  MLibelf = MLibelf || {};

var Module=typeof MLibelf!=="undefined"?MLibelf:{};var readyPromiseResolve,readyPromiseReject;Module["ready"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram="./this.program";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require("path").dirname(scriptDirectory)+"/"}else{scriptDirectory=__dirname+"/"}read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require("fs");if(!nodePath)nodePath=require("path");filename=nodePath["normalize"](filename);return nodeFS["readFileSync"](filename,binary?null:"utf8")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process["argv"].length>1){thisProgram=process["argv"][1].replace(/\\/g,"/")}arguments_=process["argv"].slice(2);process["on"]("uncaughtException",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process["on"]("unhandledRejection",abort);quit_=function(status){process["exit"](status)};Module["inspect"]=function(){return"[Emscripten Module object]"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!="undefined"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){arguments_=scriptArgs}else if(typeof arguments!="undefined"){arguments_=arguments}if(typeof quit==="function"){quit_=function(status){quit(status)}}if(typeof print!=="undefined"){if(typeof console==="undefined")console={};console.log=print;console.warn=console.error=typeof printErr!=="undefined"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=="undefined"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf("/")+1)}else{scriptDirectory=""}{read_=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module["print"]||console.log.bind(console);var err=Module["printErr"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module["arguments"])arguments_=Module["arguments"];if(Module["thisProgram"])thisProgram=Module["thisProgram"];if(Module["quit"])quit_=Module["quit"];var STACK_ALIGN=16;function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;return Math.ceil(size/factor)*factor}function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function==="function"){var typeNames={"i":"i32","j":"i64","f":"f32","d":"f64"};var type={parameters:[],results:sig[0]=="v"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return new WebAssembly.Function(type,func)}var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={"i":127,"j":126,"f":125,"d":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet=="v"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{"e":{"f":func}});var wrappedFunc=instance.exports["f"];return wrappedFunc}var freeTableIndexes=[];var functionsInTableMap;function getEmptyTableSlot(){if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH."}return wasmTable.length-1}function addFunctionWasm(func,sig){if(!functionsInTableMap){functionsInTableMap=new WeakMap;for(var i=0;i<wasmTable.length;i++){var item=wasmTable.get(i);if(item){functionsInTableMap.set(item,i)}}}if(functionsInTableMap.has(func)){return functionsInTableMap.get(func)}var ret=getEmptyTableSlot();try{wasmTable.set(ret,func)}catch(err){if(!(err instanceof TypeError)){throw err}var wrapped=convertJsFunctionToWasm(func,sig);wasmTable.set(ret,wrapped)}functionsInTableMap.set(func,ret);return ret}function removeFunction(index){functionsInTableMap.delete(wasmTable.get(index));freeTableIndexes.push(index)}function addFunction(func,sig){return addFunctionWasm(func,sig)}var tempRet0=0;var setTempRet0=function(value){tempRet0=value};var wasmBinary;if(Module["wasmBinary"])wasmBinary=Module["wasmBinary"];var noExitRuntime;if(Module["noExitRuntime"])noExitRuntime=Module["noExitRuntime"];if(typeof WebAssembly!=="object"){abort("no native wasm support detected")}function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}function getValue(ptr,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":return HEAP8[ptr>>0];case"i8":return HEAP8[ptr>>0];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return HEAPF64[ptr>>3];default:abort("invalid type for getValue: "+type)}return null}var wasmMemory;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}function getCFunc(ident){var func=Module["_"+ident];assert(func,"Cannot call unknown function "+ident+", make sure it is exported");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={"string":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},"array":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType==="string")return UTF8ToString(ret);if(returnType==="boolean")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str="";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):""}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module["HEAP8"]=HEAP8=new Int8Array(buf);Module["HEAP16"]=HEAP16=new Int16Array(buf);Module["HEAP32"]=HEAP32=new Int32Array(buf);Module["HEAPU8"]=HEAPU8=new Uint8Array(buf);Module["HEAPU16"]=HEAPU16=new Uint16Array(buf);Module["HEAPU32"]=HEAPU32=new Uint32Array(buf);Module["HEAPF32"]=HEAPF32=new Float32Array(buf);Module["HEAPF64"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module["INITIAL_MEMORY"]||16777216;if(Module["wasmMemory"]){wasmMemory=Module["wasmMemory"]}else{wasmMemory=new WebAssembly.Memory({"initial":INITIAL_MEMORY/65536,"maximum":2147483648/65536})}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(!Module["noFSInit"]&&!FS.init.initialized)FS.init();TTY.init();callRuntimeCallbacks(__ATINIT__)}function preMain(){FS.ignorePermissions=false;callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["preloadedImages"]={};Module["preloadedAudios"]={};function abort(what){if(Module["onAbort"]){Module["onAbort"](what)}what+="";err(what);ABORT=true;EXITSTATUS=1;what="abort("+what+"). Build with -s ASSERTIONS=1 for more info.";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}function hasPrefix(str,prefix){return String.prototype.startsWith?str.startsWith(prefix):str.indexOf(prefix)===0}var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return hasPrefix(filename,dataURIPrefix)}var fileURIPrefix="file://";function isFileURI(filename){return hasPrefix(filename,fileURIPrefix)}var wasmBinaryFile="libelf.out.wasm";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(wasmBinaryFile)}else{throw"both async and sync fetching of the wasm failed"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch==="function"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){if(!response["ok"]){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()}).catch(function(){return getBinary()})}return Promise.resolve().then(getBinary)}function createWasm(){var info={"a":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module["asm"]=exports;wasmTable=Module["asm"]["k"];removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");function receiveInstantiatedSource(output){receiveInstance(output["instance"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err("failed to asynchronously prepare wasm: "+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==="function"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch==="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err("wasm streaming compile failed: "+reason);err("falling back to ArrayBuffer instantiation");return instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module["instantiateWasm"]){try{var exports=Module["instantiateWasm"](info,receiveInstance);return exports}catch(e){err("Module.instantiateWasm callback failed with error: "+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback(Module);continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var PATH={splitPath:function(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift("..")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)==="/",trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter(function(p){return!!p}),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path==="/")return"/";path=PATH.normalize(path);path=path.replace(/\/$/,"");var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join("/"))},join2:function(l,r){return PATH.normalize(l+"/"+r)}};function getRandomDevice(){if(typeof crypto==="object"&&typeof crypto["getRandomValues"]==="function"){var randomBuffer=new Uint8Array(1);return function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=require("crypto");return function(){return crypto_module["randomBytes"](1)[0]}}catch(e){}}return function(){abort("randomDevice")}}var PATH_FS={resolve:function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=path.charAt(0)==="/"}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter(function(p){return!!p}),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."},relative:function(from,to){from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")}};var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.flush(stream.tty)},flush:function(stream){stream.tty.ops.flush(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=Buffer.alloc?Buffer.alloc(BUFSIZE):new Buffer(BUFSIZE);var bytesRead=0;try{bytesRead=nodeFS.readSync(process.stdin.fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf("EOF")!=-1)bytesRead=0;else throw e}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8")}else{result=null}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};function mmapAlloc(size){var alignedSize=alignMemory(size,16384);var ptr=_malloc(alignedSize);while(size<alignedSize)HEAP8[ptr+size++]=0;return ptr}var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,"/",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node},getFileDataAsRegularArray:function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[44]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name]},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name]},readdir:function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,address,length,position,prot,flags){assert(address===0);if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}HEAP8.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function(path,opts){path=PATH_FS.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=PATH.normalizeArray(path.split("/").filter(function(p){return!!p}),false);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath:function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?mount+"/"+path:mount+path}path=path?node.name+"/"+path:node.name;node=node.parent}},hashName:function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:function(parent,name){var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:function(parent,name,mode,rdev){var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:function(node){FS.hashRemoveNode(node)},isRoot:function(node){return node===node.parent},isMountpoint:function(node){return!!node.mounted},isFile:function(mode){return(mode&61440)===32768},isDir:function(mode){return(mode&61440)===16384},isLink:function(mode){return(mode&61440)===40960},isChrdev:function(mode){return(mode&61440)===8192},isBlkdev:function(mode){return(mode&61440)===24576},isFIFO:function(mode){return(mode&61440)===4096},isSocket:function(mode){return(mode&49152)===49152},flagModes:{"r":0,"r+":2,"w":577,"w+":578,"a":1089,"a+":1090},modeStringToFlags:function(str){var flags=FS.flagModes[str];if(typeof flags==="undefined"){throw new Error("Unknown file open mode: "+str)}return flags},flagsToPermissionString:function(flag){var perms=["r","w","rw"][flag&3];if(flag&512){perms+="w"}return perms},nodePermissions:function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf("r")!==-1&&!(node.mode&292)){return 2}else if(perms.indexOf("w")!==-1&&!(node.mode&146)){return 2}else if(perms.indexOf("x")!==-1&&!(node.mode&73)){return 2}return 0},mayLookup:function(dir){var errCode=FS.nodePermissions(dir,"x");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate:function(dir,name){try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,"wx")},mayDelete:function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,"wx");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen:function(node,flags){if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=="r"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStream:function(fd){return FS.streams[fd]},createStream:function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=function(){};FS.FSStream.prototype={object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}}}}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:function(fd){FS.streams[fd]=null},chrdev_stream_ops:{open:function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:function(){throw new FS.ErrnoError(70)}},major:function(dev){return dev>>8},minor:function(dev){return dev&255},makedev:function(ma,mi){return ma<<8|mi},registerDevice:function(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:function(dev){return FS.devices[dev]},getMounts:function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:function(populate,callback){if(typeof populate==="function"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err("warning: "+FS.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:function(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup:function(parent,name){return parent.node_ops.lookup(parent,name)},mknod:function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create:function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:function(path,mode){var dirs=path.split("/");var d="";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev:function(path,mode,dev){if(typeof dev==="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:function(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,"w");if(errCode){throw new FS.ErrnoError(errCode)}}try{if(FS.trackingDelegate["willMovePath"]){FS.trackingDelegate["willMovePath"](old_path,new_path)}}catch(e){err("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate["onMovePath"])FS.trackingDelegate["onMovePath"](old_path,new_path)}catch(e){err("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}},rmdir:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){err("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){err("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}},readdir:function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){err("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){err("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}},readlink:function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat:function(path){return FS.stat(path,true)},chmod:function(path,mode,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:function(path,mode){FS.chmod(path,mode,true)},fchmod:function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chmod(stream.node,mode)},chown:function(path,uid,gid,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:function(path,uid,gid){FS.chown(path,uid,gid,true)},fchown:function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chown(stream.node,uid,gid)},truncate:function(path,len){if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,"w");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime:function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:function(path,flags,mode,fd_start,fd_end){if(path===""){throw new FS.ErrnoError(44)}flags=typeof flags==="string"?FS.modeStringToFlags(flags):flags;mode=typeof mode==="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;err("FS.trackingDelegate error on read file: "+path)}}try{if(FS.trackingDelegate["onOpenFile"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate["onOpenFile"](path,trackingFlags)}}catch(e){err("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: "+e.message)}return stream},close:function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:function(stream){return stream.fd===null},llseek:function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate["onWriteToFile"])FS.trackingDelegate["onWriteToFile"](stream.path)}catch(e){err("FS.trackingDelegate['onWriteToFile']('"+stream.path+"') threw an exception: "+e.message)}return bytesWritten},allocate:function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap:function(stream,address,length,position,prot,flags){if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,address,length,position,prot,flags)},msync:function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:function(stream){return 0},ioctl:function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:function(path,opts){opts=opts||{};opts.flags=opts.flags||0;opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret},writeFile:function(path,data,opts){opts=opts||{};opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==="string"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error("Unsupported data type")}FS.close(stream)},cwd:function(){return FS.currentPath},chdir:function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,"x");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories:function(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")},createDefaultDevices:function(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:function(){return 0},write:function(stream,buffer,offset,length,pos){return length}});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var random_device=getRandomDevice();FS.createDevice("/dev","random",random_device);FS.createDevice("/dev","urandom",random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")},createSpecialDirectories:function(){FS.mkdir("/proc");FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({mount:function(){var node=FS.createNode("/proc/self","fd",16384|511,73);node.node_ops={lookup:function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function(){return stream.path}}};ret.parent=ret;return ret}};return node}},{},"/proc/self/fd")},createStandardStreams:function(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin",0);var stdout=FS.open("/dev/stdout",1);var stderr=FS.open("/dev/stderr",1)},ensureErrnoError:function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message="FS error"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"})},staticInit:function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={"MEMFS":MEMFS}},init:function(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()},quit:function(){FS.init.initialized=false;var fflush=Module["_fflush"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},findObject:function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{return null}},analyzePath:function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret},createPath:function(parent,path,canRead,canWrite){parent=typeof parent==="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:function(parent,name,input,output){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:function(stream){stream.seekable=false},close:function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}},read:function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile:function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!=="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}},createLazyFile:function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=function(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);if(typeof Uint8Array!="undefined")xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||"",true)}};var lazyArray=this;lazyArray.setDataGetter(function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out("LazyFiles on gzip forces download of the whole file when length is accessed")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments)}});stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){FS.forceLoadFile(node);var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node},createPreloadedFile:function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module["preloadPlugins"].forEach(function(plugin){if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,function(){if(onerror)onerror();removeRunDependency(dep)});handled=true}});if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url=="string"){Browser.asyncLoad(url,function(byteArray){processData(byteArray)},onerror)}else{processData(url)}},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){out("creating db");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],"readwrite");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror}};var SYSCALLS={mappings:{},DEFAULT_POLLMASK:5,umask:511,calculateAt:function(dirfd,path){if(path[0]!=="/"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(8);dir=dirstream.path}path=PATH.join2(dir,path)}return path},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;HEAP32[buf+56>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+76>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+80>>2]=tempI64[0],HEAP32[buf+84>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags,offset){var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},doMkdir:function(path,mode){path=PATH.normalize(path);if(path[path.length-1]==="/")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0},doMknod:function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-28}FS.mknod(path,mode,dev);return 0},doReadlink:function(path,buf,bufsize){if(bufsize<=0)return-28;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len},doAccess:function(path,amode){if(amode&~7){return-28}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;if(!node){return-44}var perms="";if(amode&4)perms+="r";if(amode&2)perms+="w";if(amode&1)perms+="x";if(perms&&FS.nodePermissions(node,perms)){return-2}return 0},doDup:function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd},doReadv:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret},doWritev:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD:function(fd){var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream},get64:function(low,high){return low}};function ___sys_ftruncate64(fd,zero,low,high){try{var length=SYSCALLS.get64(low,high);FS.ftruncate(fd,length);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function _emscripten_get_heap_size(){return HEAPU8.length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){requestedSize=requestedSize>>>0;var oldSize=_emscripten_get_heap_size();var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}var minHeapSize=16777216;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(minHeapSize,requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ENV={};function getExecutableName(){return thisProgram||"./this.program"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator==="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8";var env={"USER":"web_user","LOGNAME":"web_user","PATH":"/","PWD":"/","HOME":"/home/web_user","LANG":lang,"_":getExecutableName()};for(var x in ENV){env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+"="+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function _environ_get(__environ,environ_buf){try{var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAP32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _environ_sizes_get(penviron_count,penviron_buf_size){try{var strings=getEnvStrings();HEAP32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAP32[penviron_buf_size>>2]=bufSize;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doReadv(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{var stream=SYSCALLS.getStreamFromFD(fd);var HIGH_OFFSET=4294967296;var offset=offset_high*HIGH_OFFSET+(offset_low>>>0);var DOUBLE_LIMIT=9007199254740992;if(offset<=-DOUBLE_LIMIT||offset>=DOUBLE_LIMIT){return-61}FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doWritev(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _setTempRet0($i){setTempRet0($i|0)}var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.staticInit();function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}__ATINIT__.push({func:function(){___wasm_call_ctors()}});var asmLibraryArg={"g":___sys_ftruncate64,"i":_emscripten_memcpy_big,"j":_emscripten_resize_heap,"d":_environ_get,"e":_environ_sizes_get,"h":_fd_read,"c":_fd_seek,"f":_fd_write,"a":wasmMemory,"b":_setTempRet0};var asm=createWasm();var ___wasm_call_ctors=Module["___wasm_call_ctors"]=function(){return(___wasm_call_ctors=Module["___wasm_call_ctors"]=Module["asm"]["l"]).apply(null,arguments)};var _elf_begin=Module["_elf_begin"]=function(){return(_elf_begin=Module["_elf_begin"]=Module["asm"]["m"]).apply(null,arguments)};var _elf_memory=Module["_elf_memory"]=function(){return(_elf_memory=Module["_elf_memory"]=Module["asm"]["n"]).apply(null,arguments)};var _gelf_getclass=Module["_gelf_getclass"]=function(){return(_gelf_getclass=Module["_gelf_getclass"]=Module["asm"]["o"]).apply(null,arguments)};var _elf_cntl=Module["_elf_cntl"]=function(){return(_elf_cntl=Module["_elf_cntl"]=Module["asm"]["p"]).apply(null,arguments)};var _elf_end=Module["_elf_end"]=function(){return(_elf_end=Module["_elf_end"]=Module["asm"]["q"]).apply(null,arguments)};var _elf_errmsg=Module["_elf_errmsg"]=function(){return(_elf_errmsg=Module["_elf_errmsg"]=Module["asm"]["r"]).apply(null,arguments)};var _elf_errno=Module["_elf_errno"]=function(){return(_elf_errno=Module["_elf_errno"]=Module["asm"]["s"]).apply(null,arguments)};var _elf_fill=Module["_elf_fill"]=function(){return(_elf_fill=Module["_elf_fill"]=Module["asm"]["t"]).apply(null,arguments)};var _elf_flagdata=Module["_elf_flagdata"]=function(){return(_elf_flagdata=Module["_elf_flagdata"]=Module["asm"]["u"]).apply(null,arguments)};var _elf_flagehdr=Module["_elf_flagehdr"]=function(){return(_elf_flagehdr=Module["_elf_flagehdr"]=Module["asm"]["v"]).apply(null,arguments)};var _elf_flagelf=Module["_elf_flagelf"]=function(){return(_elf_flagelf=Module["_elf_flagelf"]=Module["asm"]["w"]).apply(null,arguments)};var _elf_flagphdr=Module["_elf_flagphdr"]=function(){return(_elf_flagphdr=Module["_elf_flagphdr"]=Module["asm"]["x"]).apply(null,arguments)};var _elf_flagscn=Module["_elf_flagscn"]=function(){return(_elf_flagscn=Module["_elf_flagscn"]=Module["asm"]["y"]).apply(null,arguments)};var _elf_flagshdr=Module["_elf_flagshdr"]=function(){return(_elf_flagshdr=Module["_elf_flagshdr"]=Module["asm"]["z"]).apply(null,arguments)};var _elf_getarhdr=Module["_elf_getarhdr"]=function(){return(_elf_getarhdr=Module["_elf_getarhdr"]=Module["asm"]["A"]).apply(null,arguments)};var _elf_getarsym=Module["_elf_getarsym"]=function(){return(_elf_getarsym=Module["_elf_getarsym"]=Module["asm"]["B"]).apply(null,arguments)};var _elf_getbase=Module["_elf_getbase"]=function(){return(_elf_getbase=Module["_elf_getbase"]=Module["asm"]["C"]).apply(null,arguments)};var _elf_getdata=Module["_elf_getdata"]=function(){return(_elf_getdata=Module["_elf_getdata"]=Module["asm"]["D"]).apply(null,arguments)};var _elf_getident=Module["_elf_getident"]=function(){return(_elf_getident=Module["_elf_getident"]=Module["asm"]["E"]).apply(null,arguments)};var _elf_getscn=Module["_elf_getscn"]=function(){return(_elf_getscn=Module["_elf_getscn"]=Module["asm"]["F"]).apply(null,arguments)};var _elf_hash=Module["_elf_hash"]=function(){return(_elf_hash=Module["_elf_hash"]=Module["asm"]["G"]).apply(null,arguments)};var _elf_kind=Module["_elf_kind"]=function(){return(_elf_kind=Module["_elf_kind"]=Module["asm"]["H"]).apply(null,arguments)};var _elf_ndxscn=Module["_elf_ndxscn"]=function(){return(_elf_ndxscn=Module["_elf_ndxscn"]=Module["asm"]["I"]).apply(null,arguments)};var _elf_newdata=Module["_elf_newdata"]=function(){return(_elf_newdata=Module["_elf_newdata"]=Module["asm"]["J"]).apply(null,arguments)};var _elf_newscn=Module["_elf_newscn"]=function(){return(_elf_newscn=Module["_elf_newscn"]=Module["asm"]["K"]).apply(null,arguments)};var _elf_next=Module["_elf_next"]=function(){return(_elf_next=Module["_elf_next"]=Module["asm"]["L"]).apply(null,arguments)};var _elf_nextscn=Module["_elf_nextscn"]=function(){return(_elf_nextscn=Module["_elf_nextscn"]=Module["asm"]["M"]).apply(null,arguments)};var _elf_rand=Module["_elf_rand"]=function(){return(_elf_rand=Module["_elf_rand"]=Module["asm"]["N"]).apply(null,arguments)};var _elf_rawdata=Module["_elf_rawdata"]=function(){return(_elf_rawdata=Module["_elf_rawdata"]=Module["asm"]["O"]).apply(null,arguments)};var _elf_rawfile=Module["_elf_rawfile"]=function(){return(_elf_rawfile=Module["_elf_rawfile"]=Module["asm"]["P"]).apply(null,arguments)};var _elf_strptr=Module["_elf_strptr"]=function(){return(_elf_strptr=Module["_elf_strptr"]=Module["asm"]["Q"]).apply(null,arguments)};var _elf_update=Module["_elf_update"]=function(){return(_elf_update=Module["_elf_update"]=Module["asm"]["R"]).apply(null,arguments)};var _elf_version=Module["_elf_version"]=function(){return(_elf_version=Module["_elf_version"]=Module["asm"]["S"]).apply(null,arguments)};var _elf32_checksum=Module["_elf32_checksum"]=function(){return(_elf32_checksum=Module["_elf32_checksum"]=Module["asm"]["T"]).apply(null,arguments)};var _elf64_checksum=Module["_elf64_checksum"]=function(){return(_elf64_checksum=Module["_elf64_checksum"]=Module["asm"]["U"]).apply(null,arguments)};var _gelf_checksum=Module["_gelf_checksum"]=function(){return(_gelf_checksum=Module["_gelf_checksum"]=Module["asm"]["V"]).apply(null,arguments)};var _elf32_fsize=Module["_elf32_fsize"]=function(){return(_elf32_fsize=Module["_elf32_fsize"]=Module["asm"]["W"]).apply(null,arguments)};var _elf64_fsize=Module["_elf64_fsize"]=function(){return(_elf64_fsize=Module["_elf64_fsize"]=Module["asm"]["X"]).apply(null,arguments)};var _gelf_fsize=Module["_gelf_fsize"]=function(){return(_gelf_fsize=Module["_gelf_fsize"]=Module["asm"]["Y"]).apply(null,arguments)};var _gelf_msize=Module["_gelf_msize"]=function(){return(_gelf_msize=Module["_gelf_msize"]=Module["asm"]["Z"]).apply(null,arguments)};var _elf32_getehdr=Module["_elf32_getehdr"]=function(){return(_elf32_getehdr=Module["_elf32_getehdr"]=Module["asm"]["_"]).apply(null,arguments)};var _elf64_getehdr=Module["_elf64_getehdr"]=function(){return(_elf64_getehdr=Module["_elf64_getehdr"]=Module["asm"]["$"]).apply(null,arguments)};var _elf32_getphdr=Module["_elf32_getphdr"]=function(){return(_elf32_getphdr=Module["_elf32_getphdr"]=Module["asm"]["aa"]).apply(null,arguments)};var _elf64_getphdr=Module["_elf64_getphdr"]=function(){return(_elf64_getphdr=Module["_elf64_getphdr"]=Module["asm"]["ba"]).apply(null,arguments)};var _elf32_getshdr=Module["_elf32_getshdr"]=function(){return(_elf32_getshdr=Module["_elf32_getshdr"]=Module["asm"]["ca"]).apply(null,arguments)};var _elf64_getshdr=Module["_elf64_getshdr"]=function(){return(_elf64_getshdr=Module["_elf64_getshdr"]=Module["asm"]["da"]).apply(null,arguments)};var _elf32_newehdr=Module["_elf32_newehdr"]=function(){return(_elf32_newehdr=Module["_elf32_newehdr"]=Module["asm"]["ea"]).apply(null,arguments)};var _elf64_newehdr=Module["_elf64_newehdr"]=function(){return(_elf64_newehdr=Module["_elf64_newehdr"]=Module["asm"]["fa"]).apply(null,arguments)};var _gelf_newehdr=Module["_gelf_newehdr"]=function(){return(_gelf_newehdr=Module["_gelf_newehdr"]=Module["asm"]["ga"]).apply(null,arguments)};var _elf32_newphdr=Module["_elf32_newphdr"]=function(){return(_elf32_newphdr=Module["_elf32_newphdr"]=Module["asm"]["ha"]).apply(null,arguments)};var _elf64_newphdr=Module["_elf64_newphdr"]=function(){return(_elf64_newphdr=Module["_elf64_newphdr"]=Module["asm"]["ia"]).apply(null,arguments)};var _gelf_newphdr=Module["_gelf_newphdr"]=function(){return(_gelf_newphdr=Module["_gelf_newphdr"]=Module["asm"]["ja"]).apply(null,arguments)};var _elf32_xlatetom=Module["_elf32_xlatetom"]=function(){return(_elf32_xlatetom=Module["_elf32_xlatetom"]=Module["asm"]["ka"]).apply(null,arguments)};var _elf32_xlatetof=Module["_elf32_xlatetof"]=function(){return(_elf32_xlatetof=Module["_elf32_xlatetof"]=Module["asm"]["la"]).apply(null,arguments)};var _elf_delscn=Module["_elf_delscn"]=function(){return(_elf_delscn=Module["_elf_delscn"]=Module["asm"]["ma"]).apply(null,arguments)};var _elfx_remscn=Module["_elfx_remscn"]=function(){return(_elfx_remscn=Module["_elfx_remscn"]=Module["asm"]["na"]).apply(null,arguments)};var _elfx_movscn=Module["_elfx_movscn"]=function(){return(_elfx_movscn=Module["_elfx_movscn"]=Module["asm"]["oa"]).apply(null,arguments)};var _elf_getphnum=Module["_elf_getphnum"]=function(){return(_elf_getphnum=Module["_elf_getphnum"]=Module["asm"]["pa"]).apply(null,arguments)};var _elf_getshnum=Module["_elf_getshnum"]=function(){return(_elf_getshnum=Module["_elf_getshnum"]=Module["asm"]["qa"]).apply(null,arguments)};var _elf_getshstrndx=Module["_elf_getshstrndx"]=function(){return(_elf_getshstrndx=Module["_elf_getshstrndx"]=Module["asm"]["ra"]).apply(null,arguments)};var _elfx_update_shstrndx=Module["_elfx_update_shstrndx"]=function(){return(_elfx_update_shstrndx=Module["_elfx_update_shstrndx"]=Module["asm"]["sa"]).apply(null,arguments)};var _elf64_xlatetom=Module["_elf64_xlatetom"]=function(){return(_elf64_xlatetom=Module["_elf64_xlatetom"]=Module["asm"]["ta"]).apply(null,arguments)};var _elf64_xlatetof=Module["_elf64_xlatetof"]=function(){return(_elf64_xlatetof=Module["_elf64_xlatetof"]=Module["asm"]["ua"]).apply(null,arguments)};var _gelf_xlatetom=Module["_gelf_xlatetom"]=function(){return(_gelf_xlatetom=Module["_gelf_xlatetom"]=Module["asm"]["va"]).apply(null,arguments)};var _gelf_xlatetof=Module["_gelf_xlatetof"]=function(){return(_gelf_xlatetof=Module["_gelf_xlatetof"]=Module["asm"]["wa"]).apply(null,arguments)};var _gelf_getehdr=Module["_gelf_getehdr"]=function(){return(_gelf_getehdr=Module["_gelf_getehdr"]=Module["asm"]["xa"]).apply(null,arguments)};var _gelf_update_ehdr=Module["_gelf_update_ehdr"]=function(){return(_gelf_update_ehdr=Module["_gelf_update_ehdr"]=Module["asm"]["ya"]).apply(null,arguments)};var _gelf_getphdr=Module["_gelf_getphdr"]=function(){return(_gelf_getphdr=Module["_gelf_getphdr"]=Module["asm"]["za"]).apply(null,arguments)};var _gelf_update_phdr=Module["_gelf_update_phdr"]=function(){return(_gelf_update_phdr=Module["_gelf_update_phdr"]=Module["asm"]["Aa"]).apply(null,arguments)};var _gelf_getshdr=Module["_gelf_getshdr"]=function(){return(_gelf_getshdr=Module["_gelf_getshdr"]=Module["asm"]["Ba"]).apply(null,arguments)};var _gelf_update_shdr=Module["_gelf_update_shdr"]=function(){return(_gelf_update_shdr=Module["_gelf_update_shdr"]=Module["asm"]["Ca"]).apply(null,arguments)};var _gelf_getsym=Module["_gelf_getsym"]=function(){return(_gelf_getsym=Module["_gelf_getsym"]=Module["asm"]["Da"]).apply(null,arguments)};var _gelf_update_sym=Module["_gelf_update_sym"]=function(){return(_gelf_update_sym=Module["_gelf_update_sym"]=Module["asm"]["Ea"]).apply(null,arguments)};var _gelf_getdyn=Module["_gelf_getdyn"]=function(){return(_gelf_getdyn=Module["_gelf_getdyn"]=Module["asm"]["Fa"]).apply(null,arguments)};var _gelf_update_dyn=Module["_gelf_update_dyn"]=function(){return(_gelf_update_dyn=Module["_gelf_update_dyn"]=Module["asm"]["Ga"]).apply(null,arguments)};var _gelf_getrela=Module["_gelf_getrela"]=function(){return(_gelf_getrela=Module["_gelf_getrela"]=Module["asm"]["Ha"]).apply(null,arguments)};var _gelf_update_rela=Module["_gelf_update_rela"]=function(){return(_gelf_update_rela=Module["_gelf_update_rela"]=Module["asm"]["Ia"]).apply(null,arguments)};var _gelf_getrel=Module["_gelf_getrel"]=function(){return(_gelf_getrel=Module["_gelf_getrel"]=Module["asm"]["Ja"]).apply(null,arguments)};var _gelf_update_rel=Module["_gelf_update_rel"]=function(){return(_gelf_update_rel=Module["_gelf_update_rel"]=Module["asm"]["Ka"]).apply(null,arguments)};var stackSave=Module["stackSave"]=function(){return(stackSave=Module["stackSave"]=Module["asm"]["La"]).apply(null,arguments)};var stackRestore=Module["stackRestore"]=function(){return(stackRestore=Module["stackRestore"]=Module["asm"]["Ma"]).apply(null,arguments)};var stackAlloc=Module["stackAlloc"]=function(){return(stackAlloc=Module["stackAlloc"]=Module["asm"]["Na"]).apply(null,arguments)};var _malloc=Module["_malloc"]=function(){return(_malloc=Module["_malloc"]=Module["asm"]["Oa"]).apply(null,arguments)};var _free=Module["_free"]=function(){return(_free=Module["_free"]=Module["asm"]["Pa"]).apply(null,arguments)};Module["ccall"]=ccall;Module["setValue"]=setValue;Module["getValue"]=getValue;Module["writeArrayToMemory"]=writeArrayToMemory;Module["addFunction"]=addFunction;Module["removeFunction"]=removeFunction;var calledRun;function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;Module["calledRun"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("")},1);doRun()},1)}else{doRun()}}Module["run"]=run;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}noExitRuntime=true;run();


  return MLibelf.ready
}
);
})();
if (typeof exports === 'object' && typeof module === 'object')
  module.exports = MLibelf;
else if (typeof define === 'function' && define['amd'])
  define([], function() { return MLibelf; });
else if (typeof exports === 'object')
  exports["MLibelf"] = MLibelf;

/**
 * (c) 2018 Libelf.JS
 * Wrapper made by Alexandro Sanchez Bach.
 */

/* Libelf constants */

// Commands
ELF_C_NULL    = 0;
ELF_C_READ    = 1;
ELF_C_WRITE   = 2;
ELF_C_CLR     = 3;
ELF_C_SET     = 4;
ELF_C_FDDONE  = 5;
ELF_C_FDREAD  = 6;
ELF_C_RDWR    = 7;
ELF_C_NUM     = 8;

// File types
ELF_K_NONE    = 0;
ELF_K_AR      = 1;
ELF_K_COFF    = 2;
ELF_K_ELF     = 3;
ELF_K_NUM     = 4;

// Data types
ELF_T_BYTE    = 0;
ELF_T_ADDR    = 1;
ELF_T_DYN     = 2;
ELF_T_EHDR    = 3;
ELF_T_HALF    = 4;
ELF_T_OFF     = 5;
ELF_T_PHDR    = 6;
ELF_T_RELA    = 7;
ELF_T_REL     = 8;
ELF_T_SHDR    = 9;
ELF_T_SWORD   = 10;
ELF_T_SYM     = 11;
ELF_T_WORD    = 12;
ELF_T_SXWORD  = 13;
ELF_T_XWORD   = 14;
ELF_T_VDEF    = 15;
ELF_T_VNEED   = 16;
ELF_T_NUM     = 17;

/* ELF constants */

EI_NIDENT      = 16;

// e_type
ET_NONE       = 0;
ET_REL        = 1;
ET_EXEC       = 2;
ET_DYN        = 3;
ET_CORE       = 4;
ET_NUM        = 5;
ET_LOOS       = 0xfe00;
ET_HIOS       = 0xfeff;
ET_LOPROC     = 0xff00;
ET_HIPROC     = 0xffff;

// e_machine
EM_NONE          = 0;   /* No machine */
EM_M32           = 1;   /* AT&T WE 32100 */
EM_SPARC         = 2;   /* SPARC */
EM_386           = 3;   /* Intel 80386 */
EM_68K           = 4;   /* Motorola 68000 */
EM_88K           = 5;   /* Motorola 88000 */
EM_486           = 6;   /* Intel i486 (DO NOT USE THIS ONE) */
EM_860           = 7;   /* Intel 80860 */
EM_MIPS          = 8;   /* MIPS I Architecture */
EM_S370          = 9;   /* IBM System/370 Processor */
EM_MIPS_RS3_LE   = 10;  /* MIPS RS3000 Little-endian */
EM_SPARC64       = 11;  /* SPARC 64-bit */
EM_PARISC        = 15;  /* Hewlett-Packard PA-RISC */
EM_VPP500        = 17;  /* Fujitsu VPP500 */
EM_SPARC32PLUS   = 18;  /* Enhanced instruction set SPARC */
EM_960           = 19;  /* Intel 80960 */
EM_PPC           = 20;  /* PowerPC */
EM_PPC64         = 21;  /* 64-bit PowerPC */
EM_S390          = 22;  /* IBM System/390 Processor */
EM_V800          = 36;  /* NEC V800 */
EM_FR20          = 37;  /* Fujitsu FR20 */
EM_RH32          = 38;  /* TRW RH-32 */
EM_RCE           = 39;  /* Motorola RCE */
EM_ARM           = 40;  /* Advanced RISC Machines ARM */
EM_ALPHA         = 41;  /* Digital Alpha */
EM_SH            = 42;  /* Hitachi SH */
EM_SPARCV9       = 43;  /* SPARC Version 9 */
EM_TRICORE       = 44;  /* Siemens TriCore embedded processor */
EM_ARC           = 45;  /* Argonaut RISC Core, Argonaut Technologies Inc. */
EM_H8_300        = 46;  /* Hitachi H8/300 */
EM_H8_300H       = 47;  /* Hitachi H8/300H */
EM_H8S           = 48;  /* Hitachi H8S */
EM_H8_500        = 49;  /* Hitachi H8/500 */
EM_IA_64         = 50;  /* Intel IA-64 processor architecture */
EM_MIPS_X        = 51;  /* Stanford MIPS-X */
EM_COLDFIRE      = 52;  /* Motorola ColdFire */
EM_68HC12        = 53;  /* Motorola M68HC12 */
EM_MMA           = 54;  /* Fujitsu MMA Multimedia Accelerator */
EM_PCP           = 55;  /* Siemens PCP */
EM_NCPU          = 56;  /* Sony nCPU embedded RISC processor */
EM_NDR1          = 57;  /* Denso NDR1 microprocessor */
EM_STARCORE      = 58;  /* Motorola Star*Core processor */
EM_ME16          = 59;  /* Toyota ME16 processor */
EM_ST100         = 60;  /* STMicroelectronics ST100 processor */
EM_TINYJ         = 61;  /* Advanced Logic Corp. TinyJ embedded processor family */
EM_X86_64        = 62;  /* AMD x86-64 architecture */
EM_PDSP          = 63;  /* Sony DSP Processor */
EM_FX66          = 66;  /* Siemens FX66 microcontroller */
EM_ST9PLUS       = 67;  /* STMicroelectronics ST9+ 8/16 bit microcontroller */
EM_ST7           = 68;  /* STMicroelectronics ST7 8-bit microcontroller */
EM_68HC16        = 69;  /* Motorola MC68HC16 Microcontroller */
EM_68HC11        = 70;  /* Motorola MC68HC11 Microcontroller */
EM_68HC08        = 71;  /* Motorola MC68HC08 Microcontroller */
EM_68HC05        = 72;  /* Motorola MC68HC05 Microcontroller */
EM_SVX           = 73;  /* Silicon Graphics SVx */
EM_ST19          = 74;  /* STMicroelectronics ST19 8-bit microcontroller */
EM_VAX           = 75;  /* Digital VAX */
EM_CRIS          = 76;  /* Axis Communications 32-bit embedded processor */
EM_JAVELIN       = 77;  /* Infineon Technologies 32-bit embedded processor */
EM_FIREPATH      = 78;  /* Element 14 64-bit DSP Processor */
EM_ZSP           = 79;  /* LSI Logic 16-bit DSP Processor */
EM_MMIX          = 80;  /* Donald Knuth's educational 64-bit processor */
EM_HUANY         = 81;  /* Harvard University machine-independent object files */
EM_PRISM         = 82;  /* SiTera Prism */
EM_AVR           = 83;  /* Atmel AVR 8-bit microcontroller */
EM_FR30          = 84;  /* Fujitsu FR30 */
EM_D10V          = 85;  /* Mitsubishi D10V */
EM_D30V          = 86;  /* Mitsubishi D30V */
EM_V850          = 87;  /* NEC v850 */
EM_M32R          = 88;  /* Mitsubishi M32R */
EM_MN10300       = 89;  /* Matsushita MN10300 */
EM_MN10200       = 90;  /* Matsushita MN10200 */
EM_PJ            = 91;  /* picoJava */
EM_OPENRISC      = 92;  /* OpenRISC 32-bit embedded processor */
EM_ARC_A5        = 93;  /* ARC Cores Tangent-A5 */
EM_XTENSA        = 94;  /* Tensilica Xtensa Architecture */
EM_VIDEOCORE     = 95;  /* Alphamosaic VideoCore processor */
EM_TMM_GPP       = 96;  /* Thompson Multimedia General Purpose Processor */
EM_NS32K         = 97;  /* National Semiconductor 32000 series */
EM_TPC           = 98;  /* Tenor Network TPC processor */
EM_SNP1K         = 99;  /* Trebia SNP 1000 processor */
EM_ST200         = 100; /* STMicroelectronics (www.st.com) ST200 microcontroller */
EM_IP2K          = 101; /* Ubicom IP2xxx microcontroller family */
EM_MAX           = 102; /* MAX Processor */
EM_CR            = 103; /* National Semiconductor CompactRISC microprocessor */
EM_F2MC16        = 104; /* Fujitsu F2MC16 */
EM_MSP430        = 105; /* Texas Instruments embedded microcontroller msp430 */
EM_BLACKFIN      = 106; /* Analog Devices Blackfin (DSP) processor */
EM_SE_C33        = 107; /* S1C33 Family of Seiko Epson processors */
EM_SEP           = 108; /* Sharp embedded microprocessor */
EM_ARCA          = 109; /* Arca RISC Microprocessor */
EM_UNICORE       = 110; /* Microprocessor series from PKU-Unity Ltd. and MPRC of Peking University */
EM_NUM           = 111;
EM_AMD64         = EM_X86_64;

// e_ident[EI_VERSION], e_version
EV_NONE          = 0;
EV_CURRENT       = 1;
EV_NUM           = 2;

// p_type
PT_NULL        = 0;
PT_LOAD        = 1;
PT_DYNAMIC     = 2;
PT_INTERP      = 3;
PT_NOTE        = 4;
PT_SHLIB       = 5;
PT_PHDR        = 6;
PT_TLS         = 7;
PT_NUM         = 8;
PT_LOOS        = 0x60000000;
PT_HIOS        = 0x6fffffff;
PT_LOPROC      = 0x70000000;
PT_HIPROC      = 0x7fffffff;

// p_flags
PF_X           = 0x1;
PF_W           = 0x2;
PF_R           = 0x4;
PF_MASKOS      = 0x0ff00000;
PF_MASKPROC    = 0xf0000000;

// sh_type
SHT_NULL            = 0;
SHT_PROGBITS        = 1;
SHT_SYMTAB          = 2;
SHT_STRTAB          = 3;
SHT_RELA            = 4;
SHT_HASH            = 5;
SHT_DYNAMIC         = 6;
SHT_NOTE            = 7;
SHT_NOBITS          = 8;
SHT_REL             = 9;
SHT_SHLIB           = 10;
SHT_DYNSYM          = 11;
SHT_INIT_ARRAY      = 14;
SHT_FINI_ARRAY      = 15;
SHT_PREINIT_ARRAY   = 16;
SHT_GROUP           = 17;
SHT_SYMTAB_SHNDX    = 18;
SHT_NUM             = 19;
SHT_LOOS            = 0x60000000;
SHT_HIOS            = 0x6fffffff;
SHT_LOPROC          = 0x70000000;
SHT_HIPROC          = 0x7fffffff;
SHT_LOUSER          = 0x80000000;
SHT_HIUSER          = 0xffffffff;

// sh_flags
SHF_WRITE           = 0x1;
SHF_ALLOC           = 0x2;
SHF_EXECINSTR       = 0x4;
SHF_MASKOS          = 0x0f000000;
SHF_MASKPROC        = 0xf0000000;

// Dynamic array tags
DT_NULL             = 0;
DT_NEEDED           = 1;
DT_PLTRELSZ         = 2;
DT_PLTGOT           = 3;
DT_HASH             = 4;
DT_STRTAB           = 5;
DT_SYMTAB           = 6;
DT_RELA             = 7;
DT_RELASZ           = 8;
DT_RELAENT          = 9;
DT_STRSZ            = 10;
DT_SYMENT           = 11;
DT_INIT             = 12;
DT_FINI             = 13;
DT_SONAME           = 14;
DT_RPATH            = 15;
DT_SYMBOLIC         = 16;
DT_REL              = 17;
DT_RELSZ            = 18;
DT_RELENT           = 19;
DT_PLTREL           = 20;
DT_DEBUG            = 21;
DT_TEXTREL          = 22;
DT_JMPREL           = 23;
DT_BIND_NOW         = 24;
DT_INIT_ARRAY       = 25;
DT_FINI_ARRAY       = 26;
DT_INIT_ARRAYSZ     = 27;
DT_FINI_ARRAYSZ     = 28;
DT_RUNPATH          = 29;
DT_FLAGS            = 30;
DT_ENCODING         = 32;
DT_PREINIT_ARRAY    = 32;
DT_PREINIT_ARRAYSZ  = 33;
DT_NUM              = 34;
DT_LOOS             = 0x6000000D;
DT_HIOS             = 0x6ffff000;
DT_LOPROC           = 0x70000000;
DT_HIPROC           = 0x7fffffff;

// dt_flags
DF_ORIGIN           = 0x1;
DF_SYMBOLIC         = 0x2;
DF_TEXTREL          = 0x4;
DF_BIND_NOW         = 0x8;
DF_STATIC_TLS       = 0x10;

/**
 * (c) 2018 Libelf.JS
 * Wrapper made by Alexandro Sanchez Bach.
 */

/* ELF constants */

// e_type
const e_type_strings = {
    0:     "ET_NONE",
    1:     "ET_REL",
    2:     "ET_EXEC",
    3:     "ET_DYN",
    4:     "ET_CORE",
    5:     "ET_NUM",
};

// e_machine
const e_machine_strings = {
    0:     "EM_NONE",
    1:     "EM_M32",
    2:     "EM_SPARC",
    3:     "EM_386",
    4:     "EM_68K",
    5:     "EM_88K",
    6:     "EM_486",
    7:     "EM_860",
    8:     "EM_MIPS",
    9:     "EM_S370",
    10:    "EM_MIPS_RS3_LE",
    11:    "EM_SPARC64",
    15:    "EM_PARISC",
    17:    "EM_VPP500",
    18:    "EM_SPARC32PLUS",
    19:    "EM_960",
    20:    "EM_PPC",
    21:    "EM_PPC64",
    22:    "EM_S390",
    36:    "EM_V800",
    37:    "EM_FR20",
    38:    "EM_RH32",
    39:    "EM_RCE",
    40:    "EM_ARM",
    41:    "EM_ALPHA",
    42:    "EM_SH",
    43:    "EM_SPARCV9",
    44:    "EM_TRICORE",
    45:    "EM_ARC",
    46:    "EM_H8_300",
    47:    "EM_H8_300H",
    48:    "EM_H8S",
    49:    "EM_H8_500",
    50:    "EM_IA_64",
    51:    "EM_MIPS_X",
    52:    "EM_COLDFIRE",
    53:    "EM_68HC12",
    54:    "EM_MMA",
    55:    "EM_PCP",
    56:    "EM_NCPU",
    57:    "EM_NDR1",
    58:    "EM_STARCORE",
    59:    "EM_ME16",
    60:    "EM_ST100",
    61:    "EM_TINYJ",
    62:    "EM_X86_64",
    63:    "EM_PDSP",
    66:    "EM_FX66",
    67:    "EM_ST9PLUS",
    68:    "EM_ST7",
    69:    "EM_68HC16",
    70:    "EM_68HC11",
    71:    "EM_68HC08",
    72:    "EM_68HC05",
    73:    "EM_SVX",
    74:    "EM_ST19",
    75:    "EM_VAX",
    76:    "EM_CRIS",
    77:    "EM_JAVELIN",
    78:    "EM_FIREPATH",
    79:    "EM_ZSP",
    80:    "EM_MMIX",
    81:    "EM_HUANY",
    82:    "EM_PRISM",
    83:    "EM_AVR",
    84:    "EM_FR30",
    85:    "EM_D10V",
    86:    "EM_D30V",
    87:    "EM_V850",
    88:    "EM_M32R",
    89:    "EM_MN10300",
    90:    "EM_MN10200",
    91:    "EM_PJ",
    92:    "EM_OPENRISC",
    93:    "EM_ARC_A5",
    94:    "EM_XTENSA",
    95:    "EM_VIDEOCORE",
    96:    "EM_TMM_GPP",
    97:    "EM_NS32K",
    98:    "EM_TPC",
    99:    "EM_SNP1K",
    100:   "EM_ST200",
    101:   "EM_IP2K",
    102:   "EM_MAX",
    103:   "EM_CR",
    104:   "EM_F2MC16",
    105:   "EM_MSP430",
    106:   "EM_BLACKFIN",
    107:   "EM_SE_C33",
    108:   "EM_SEP",
    109:   "EM_ARCA",
    110:   "EM_UNICORE",
};

// e_version
const e_version_strings = {
    0:     "EV_NONE",
    1:     "EV_CURRENT",
    2:     "EV_NUM",
};

// p_type
const p_type_strings = {
    0:     "PT_NULL",
    1:     "PT_LOAD",
    2:     "PT_DYNAMIC",
    3:     "PT_INTERP",
    4:     "PT_NOTE",
    5:     "PT_SHLIB",
    6:     "PT_PHDR",
    7:     "PT_TLS",
    8:     "PT_NUM",
};

// p_flags
const p_flags_strings = {
    0x1:   "PF_X",
    0x2:   "PF_W",
    0x4:   "PF_R",
};

// sh_type
const sh_type_strings = {
    0:     "SHT_NULL",
    1:     "SHT_PROGBITS",
    2:     "SHT_SYMTAB",
    3:     "SHT_STRTAB",
    4:     "SHT_RELA",
    5:     "SHT_HASH",
    6:     "SHT_DYNAMIC",
    7:     "SHT_NOTE",
    8:     "SHT_NOBITS",
    9:     "SHT_REL",
    10:    "SHT_SHLIB",
    11:    "SHT_DYNSYM",
    14:    "SHT_INIT_ARRAY",
    15:    "SHT_FINI_ARRAY",
    16:    "SHT_PREINIT_ARRAY",
    17:    "SHT_GROUP",
    18:    "SHT_SYMTAB_SHNDX",
    19:    "SHT_NUM",
};

// sh_flags
const sh_flags_strings = {
    0x1:   "SHF_WRITE",
    0x2:   "SHF_ALLOC",
    0x4:   "SHF_EXECINSTR",
};

// dt_type
const dt_type_strings = {
    0:     "DT_NULL",
    1:     "DT_NEEDED",
    2:     "DT_PLTRELSZ",
    3:     "DT_PLTGOT",
    4:     "DT_HASH",
    5:     "DT_STRTAB",
    6:     "DT_SYMTAB",
    7:     "DT_RELA",
    8:     "DT_RELASZ",
    9:     "DT_RELAENT",
    10:    "DT_STRSZ",
    11:    "DT_SYMENT",
    12:    "DT_INIT",
    13:    "DT_FINI",
    14:    "DT_SONAME",
    15:    "DT_RPATH",
    16:    "DT_SYMBOLIC",
    17:    "DT_REL",
    18:    "DT_RELSZ",
    19:    "DT_RELENT",
    20:    "DT_PLTREL",
    21:    "DT_DEBUG",
    22:    "DT_TEXTREL",
    23:    "DT_JMPREL",
    24:    "DT_BIND_NOW",
    25:    "DT_INIT_ARRAY",
    26:    "DT_FINI_ARRAY",
    27:    "DT_INIT_ARRAYSZ",
    28:    "DT_FINI_ARRAYSZ",
    29:    "DT_RUNPATH",
    30:    "DT_FLAGS",
    32:    "DT_ENCODING",
    32:    "DT_PREINIT_ARRAY",
    33:    "DT_PREINIT_ARRAYSZ",
    34:    "DT_NUM",
};

// dt_flags
const dt_flags_strings = {
    0x01:  "DF_ORIGIN",
    0x02:  "DF_SYMBOLIC",
    0x04:  "DF_TEXTREL",
    0x08:  "DF_BIND_NOW",
    0x10:  "DF_STATIC_TLS",
};

/**
 * (c) 2018 Libelf.JS
 * Arbitrary integer emulation
 * Based on https://github.com/pierrec/js-cuint
 */

var ElfUInt = function (width) {
    // Configure properties based on bit-width
    var mask = (1 << (((width - 1) % 16) + 1)) - 1;
    var nchunks = (width + 15) / 16;

    // Return class
    return function (value) {
        this.width = width;
        this.chunks = new Uint16Array(nchunks);
        this.mask = mask;

        // Initialization:
        // Several checks are omitted since JavaScript will cast any undefined/NaN's
        // into the appropriate type while writing to the chunks array.
        if (value == null) {
            this.chunks.fill(0);
        } else {
            // Initialize from Number
            if (typeof value === 'number') {
                for (var i = 0; i < this.chunks.length; i++) {
                    this.chunks[i] = value & 0xFFFF;
                    value >>>= 16;
                }
            }
            // Initialize from String
            if (typeof value === 'string') {
                if (value.toLowerCase().startsWith("0x"))
                    value = value.slice(2);
                for (var i = 0; i < this.chunks.length; i++) {
                    this.chunks[i] = parseInt(value.slice(-4), 16);
                    value.slice(0, -4);
                }
            }
            // Initialize from Array (32-bit entries)
            if (typeof value === 'object' && Array.isArray(value)) {
                for (var i = 0; i < this.chunks.length; i++) {
                    if (i % 2 == 0)
                        this.chunks[i] = (value[(i/2)|0] >>>  0) & 0xFFFF;
                    else
                        this.chunks[i] = (value[(i/2)|0] >>> 16) & 0xFFFF;
                }
            }
            // Initialize from ElfUInt
            if (typeof value === 'object' && !Array.isArray(value)) {
                for (var i = 0; i < this.chunks.length; i++) {
                    this.chunks[i] = value.chunks[i];
                }
            }
        }

        // Methods
        this.clone = function () {
        };

        this.neg = function () {
            return this.not().add(1);
        };
        this.not = function () {
            var value = new this.constructor(this);
            for (var i = 0; i < this.chunks.length; i++)
                value.chunks[i] = ~this.chunks[i];
            return value;
        };
        this.add = function (rhs) {
            var lhs = new this.constructor(this);
            var rhs = new this.constructor(rhs);
            var carry = 0;
            for (var i = 0; i < this.chunks.length; i++) {
                var chunk_lhs = lhs.chunks[i];
                var chunk_rhs = rhs.chunks[i];
                lhs.chunks[i] = chunk_lhs + chunk_rhs + carry;
                carry = ((chunk_lhs + chunk_rhs + carry) > 0xFFFF) ? 1 : 0;
            }
            return lhs;
        };
        this.sub = function (rhs) {
            var lhs = new this.constructor(this);
            var rhs = new this.constructor(rhs);
            return this.add(rhs.neg());
        };
        this.mul = function (rhs) {
            var lhs = new this.constructor(this);
            var rhs = new this.constructor(rhs);
            return lhs;
        };
        this.div = function (rhs) {
            var lhs = new this.constructor(this);
            var rhs = new this.constructor(rhs);
            return lhs;
        };
        this.shl = function (amount) {
            var value = new this.constructor(this);
            return value;
        };
        this.shr = function (amount) {
            var value = new this.constructor(this);
            return value;
        };
        this.ror = function (amount) {
            var value = new this.constructor(this);
            return value;
        };
        this.rol = function (amount) {
            var value = new this.constructor(this);
            return value;
        };

        // Conversion
        this.hex = function () {
            var string = "0x";
            for (var i = this.chunks.length - 1; i >= 0; i--) {
                var chunkstr = this.chunks[i].toString(16);
                chunkstr = "0".repeat(4 - chunkstr.length) + chunkstr;
                string += chunkstr;
            }
            return string;
        }
        this.num = function () {
            var number = 0;
            for (var i = this.chunks.length - 1; i >= 0; i--)
                number = (number * 0x10000) + this.chunks[i];
            return number;
        }

        // Overrides
        this.valueOf = this.num;
    };
};

var ElfUInt8  = ElfUInt(8);
var ElfUInt16 = ElfUInt(16);
var ElfUInt32 = ElfUInt(32);
var ElfUInt64 = ElfUInt(64);

/**
 * (c) 2018 Libelf.JS
 * Wrapper made by Alexandro Sanchez Bach.
 */

// Emscripten demodularize
MLibelf().then(function(instance){MLibelf = instance});

// Number conversion modes
ELF_INT_NUMBER  = 1
ELF_INT_STRING  = 2
ELF_INT_OBJECT  = 3

var Elf = function (buffer) {
    // Constructor
    var ret = MLibelf.ccall('elf_version', 'number', ['number'], [EV_CURRENT]);
    if (ret == EV_NONE) {
        var error = 'Failed to initialize libelf';
        throw error;
    }
    if (buffer instanceof ArrayBuffer) {
        buffer = new Uint8Array(buffer, 0, buffer.byteLength);
    }
    buffer = Array.from(buffer);
    this.elf_size = buffer.length;
    this.elf_addr = MLibelf._malloc(this.elf_size);
    MLibelf.writeArrayToMemory(buffer, this.elf_addr);
    this.elf_ref = MLibelf.ccall('elf_memory', 'pointer',
        ['pointer', 'number'], [this.elf_addr, this.elf_size]);

    // Helpers
    this.__integer = function (value, width) {
        if (typeof value === "number") {
            value = [value];
        }
        switch (this.get_integer_type()) {
        case ELF_INT_NUMBER:
            return value[0];
        case ELF_INT_STRING:
            return value
                .map(x => x.toString(16).toUpperCase())
                .map(x => '0'.repeat(width/4 - x.length) + x)
                .reverse().join('');
        case ELF_INT_OBJECT:
            switch (width) {
            case 8:  return new ElfUInt8(value);
            case 16: return new ElfUInt16(value);
            case 32: return new ElfUInt32(value);
            case 64: return new ElfUInt64(value);
            default: throw 'Unexpected width';
            }
        default:
            var error = 'Unimplemented integer type';
            throw error;
        }
    }

    this.__read_i8  = function (addr) {
        return this.__integer(MLibelf.getValue(addr, 'i8'), 8);
    }
    this.__read_i16 = function (addr) {
        return this.__integer(MLibelf.getValue(addr, 'i16'), 16);
    }
    this.__read_i32 = function (addr) {
        return this.__integer(MLibelf.getValue(addr, 'i32'), 32);
    }
    this.__read_i64 = function (addr) {
        return this.__integer([
            MLibelf.getValue(addr+0, 'i32'),
            MLibelf.getValue(addr+4, 'i32')], 64);
    }
    this.__read = function (addr, size) {
        var array = new Uint8Array(size);
        for (var i = 0; i < size; i++) {
            array[i] = this.__read_i8(addr + i);
        }
        return array;
    }

    this.__stream_set = function (addr) {
        this.__stream_addr = addr;
    }
    this.__stream_read_i8 = function () {
        var value = this.__read_i8(this.__stream_addr);
        this.__stream_addr += 1;
        return value;
    }
    this.__stream_read_i16 = function () {
        var value = this.__read_i16(this.__stream_addr);
        this.__stream_addr += 2;
        return value;
    }
    this.__stream_read_i32 = function () {
        var value = this.__read_i32(this.__stream_addr);
        this.__stream_addr += 4;
        return value;
    }
    this.__stream_read_i64 = function () {
        var value = this.__read_i64(this.__stream_addr);
        this.__stream_addr += 8;
        return value;
    }
    this.__stream_read = function (size) {
        var value = this.__read(this.__stream_addr, size);
        this.__stream_addr += size;
        return value;
    }

    // Configuration
    this.get_integer_type = function () {
        if (this.integer_type == null) {
            return ELF_INT_OBJECT;
        }
        return this.integer_type;
    }

    this.set_integer_type = function (type) {
        this.integer_type = type;
    }

    // Methods
    this.kind = function () {
        var kind = MLibelf.ccall('elf_kind', 'number',
            ['pointer'], [this.elf_ref]);
        switch (kind) {
        case ELF_K_AR:
            return "ar";
        case ELF_K_COFF:
            return "coff";
        case ELF_K_ELF:
            return "elf";
        default:
            return undefined;
        }
    }

    this.getclass = function () {
        var value = MLibelf.ccall('gelf_getclass', 'pointer',
            ['pointer'], [this.elf_ref]);
        return value;
    }

    this.getdyn = function (data_addr, index) {
        var dyn = {};
        var dyn_size = 0x10;
        var dyn_addr = MLibelf._malloc(dyn_size);
        var ret = MLibelf.ccall('gelf_getdyn', 'pointer',
            ['pointer', 'pointer'], [data_addr, index, dyn_addr]);
        if (ret != dyn_addr) {
            var error = 'Function gelf_getdyn failed';
            throw error;
        }
        this.__stream_set(dyn_addr);
        dyn.d_tag = this.__stream_read_i64();
        dyn.d_val = this.__stream_read_i64();
        MLibelf._free(dyn_addr);
        return dyn;
    }

    this.getdata = function (scn_addr) {
        var scn_data = MLibelf.ccall('elf_getdata', 'pointer',
            ['pointer', 'pointer'], [scn_addr, 0]);
        if (scn_data == 0) {
            var error = 'Function elf_getdata failed';
            throw error;
        }
        return scn_data;
    }

    this.getehdr = function () {
        var ehdr = {};
        var ehdr_size = 0x40;
        var ehdr_addr = MLibelf._malloc(ehdr_size);
        var ret = MLibelf.ccall('gelf_getehdr', 'pointer',
            ['pointer', 'pointer'], [this.elf_ref, ehdr_addr]);
        if (ret != ehdr_addr) {
            var error = 'Function gelf_getehdr failed';
            throw error;
        }
        this.__stream_set(ehdr_addr);
        ehdr.e_indent     = this.__stream_read(EI_NIDENT);
        ehdr.e_type       = this.__stream_read_i16();
        ehdr.e_machine    = this.__stream_read_i16();
        ehdr.e_version    = this.__stream_read_i32();
        ehdr.e_entry      = this.__stream_read_i64();
        ehdr.e_phoff      = this.__stream_read_i64();
        ehdr.e_shoff      = this.__stream_read_i64();
        ehdr.e_flags      = this.__stream_read_i32();
        ehdr.e_ehsize     = this.__stream_read_i16();
        ehdr.e_phentsize  = this.__stream_read_i16();
        ehdr.e_phnum      = this.__stream_read_i16();
        ehdr.e_shentsize  = this.__stream_read_i16();
        ehdr.e_shnum      = this.__stream_read_i16();
        ehdr.e_shstrndx   = this.__stream_read_i16();
        MLibelf._free(ehdr_addr);
        return ehdr;
    }

    this.getident = function () {
        var ident_nbytes = MLibelf._malloc(4);
        var ident_addr = MLibelf.ccall('elf_getident', 'pointer',
            ['pointer', 'pointer'], [this.elf_ref, 0]);
        var ident = this.__read(ident_addr, ident_nbytes);
        MLibelf._free(ident_nbytes);
        return ident;
    }

    this.getphdr = function (index) {
        var phdr = {};
        var phdr_size = 0x38;
        var phdr_addr = MLibelf._malloc(phdr_size);
        var ret = MLibelf.ccall('gelf_getphdr', 'pointer',
            ['pointer', 'number', 'pointer'], [this.elf_ref, index, phdr_addr]);
        if (ret != phdr_addr) {
            var error = 'Function gelf_getphdr failed';
            throw error;
        }
        this.__stream_set(phdr_addr);
        phdr.p_type    = this.__stream_read_i32();
        phdr.p_flags   = this.__stream_read_i32();
        phdr.p_offset  = this.__stream_read_i64();
        phdr.p_vaddr   = this.__stream_read_i64();
        phdr.p_paddr   = this.__stream_read_i64();
        phdr.p_filesz  = this.__stream_read_i64();
        phdr.p_memsz   = this.__stream_read_i64();
        phdr.p_align   = this.__stream_read_i64();
        MLibelf._free(phdr_addr);
        return phdr;
    }

    this.getphdrnum = function () {
        var phdrnum = 0;
        var phdrnum_size = 4;
        var phdrnum_addr = MLibelf._malloc(phdrnum_size);
        var ret = MLibelf.ccall('elf_getphdrnum', 'pointer',
            ['pointer', 'pointer'], [this.elf_ref, phdrnum_addr]);
        if (ret != 0) {
            MLibelf._free(phdrnum_addr);
            var error = 'Function elf_getphdrnum failed';
            throw error;
        }
        phdrnum = __read_i32(phdrnum_addr);
        MLibelf._free(phdrnum_addr);
        return phdrnum;
    }

    this.getrel = function (index) {
        var rel = {};
        var rel_size = 0x10;
        var rel_addr = MLibelf._malloc(rel_size);
        var ret = MLibelf.ccall('gelf_getrel', 'pointer',
            ['pointer', 'pointer'], [this.elf_ref, index, rel_addr]);
        if (ret != rel_addr) {
            var error = 'Function gelf_getrel failed';
            throw error;
        }
        this.__stream_set(rel_addr);
        rel.r_offset  = this.__stream_read_i64();
        rel.r_info    = this.__stream_read_i64();
        MLibelf._free(rel_addr);
        return rel;
    }

    this.getrela = function (index) {
        var rela = {};
        var rela_size = 0x18;
        var rela_addr = MLibelf._malloc(rela_size);
        var ret = MLibelf.ccall('gelf_getrela', 'pointer',
            ['pointer', 'pointer'], [this.elf_ref, index, rela_addr]);
        if (ret != rela_addr) {
            var error = 'Function gelf_getrela failed';
            throw error;
        }
        this.__stream_set(rela_addr);
        rela.r_offset  = this.__stream_read_i64();
        rela.r_info    = this.__stream_read_i64();
        rela.r_addend  = this.__stream_read_i64();
        MLibelf._free(rela_addr);
        return rela;
    }

    this.getscn = function (index) {
        var scn_addr = MLibelf.ccall('elf_getscn', 'pointer',
            ['pointer', 'number'], [this.elf_ref, index]);
        if (scn_addr == 0) {
            var error = 'Function elf_getscn failed';
            throw error;
        }
        return scn_addr;
    }

    this.getshdr = function (scn_addr) {
        var shdr = {};
        var shdr_size = 0x40;
        var shdr_addr = MLibelf._malloc(shdr_size);
        var ret = MLibelf.ccall('gelf_getshdr', 'pointer',
            ['pointer', 'pointer'], [scn_addr, shdr_addr]);
        if (ret != shdr_addr) {
            var error = 'Function gelf_getshdr failed';
            throw error;
        }
        this.__stream_set(shdr_addr);
        shdr.sh_name       = this.__stream_read_i32();
        shdr.sh_type       = this.__stream_read_i32();
        shdr.sh_flags      = this.__stream_read_i64();
        shdr.sh_addr       = this.__stream_read_i64();
        shdr.sh_offset     = this.__stream_read_i64();
        shdr.sh_size       = this.__stream_read_i64();
        shdr.sh_link       = this.__stream_read_i32();
        shdr.sh_info       = this.__stream_read_i32();
        shdr.sh_addralign  = this.__stream_read_i64();
        shdr.sh_entsize    = this.__stream_read_i64();
        MLibelf._free(shdr_addr);
        return shdr;
    }

    this.getshdrnum = function () {
        var shdrnum = 0;
        var shdrnum_size = 4;
        var shdrnum_addr = MLibelf._malloc(shdrnum_size);
        var ret = MLibelf.ccall('elf_getshdrnum', 'pointer',
            ['pointer', 'pointer'], [this.elf_ref, shdrnum_addr]);
        if (ret != 0) {
            MLibelf._free(shdrnum_addr);
            var error = 'Function elf_getshdrnum failed';
            throw error;
        }
        shdrnum = __read_i32(shdrnum_addr);
        MLibelf._free(shdrnum_addr);
        return shdrnum;
    }

    this.getshdrstrndx = function () {
        var shdrstrndx = 0;
        var shdrstrndx_size = 4;
        var shdrstrndx_addr = MLibelf._malloc(shdrstrndx_size);
        var ret = MLibelf.ccall('elf_getshstrndx', 'pointer',
            ['pointer', 'pointer'], [this.elf_ref, shdrstrndx_addr]);
        if (ret != 0) {
            MLibelf._free(shdrstrndx_addr);
            var error = 'Function elf_getshstrndx failed';
            throw error;
        }
        shdrstrndx = __read_i32(shdrstrndx_addr);
        MLibelf._free(shdrstrndx_addr);
        return shdrstrndx;
    }

    this.getsym = function (index) {
        var sym = {};
        var sym_size = 0x18;
        var sym_addr = MLibelf._malloc(sym_size);
        var ret = MLibelf.ccall('gelf_getsym', 'pointer',
            ['pointer', 'pointer'], [this.elf_ref, index, sym_addr]);
        if (ret != sym_addr) {
            var error = 'Function gelf_getsym failed';
            throw error;
        }
        this.__stream_set(sym_addr);
        sym.st_name  = this.__stream_read_i32();
        sym.st_info  = this.__stream_read_i8();
        sym.st_other = this.__stream_read_i8();
        sym.st_shndx = this.__stream_read_i16();
        sym.st_value = this.__stream_read_i64();
        sym.st_size  = this.__stream_read_i64();
        MLibelf._free(sym_addr);
        return sym;
    }

    this.end = function () {
        MLibelf.ccall('elf_end', 'void',
            ['pointer'], [this.elf_ref]);
        MLibelf._free(this.elf_addr);
    }

    this.strptr = function (index, offset) {
        var str = MLibelf.ccall('elf_strptr', 'string',
            ['pointer', 'number', 'number'], [this.elf_ref, index, offset]);
        return str;
    }

    // Shorthands
    this.get_dynamic_entries = function () {
        /* Locate dynamic section */
        var addr = 0;
        var scn_dynamic_addr = 0;
        var scn_dynamic_data = 0;
        var ehdr = this.getehdr();
        for (var i = 1; i < ehdr.e_shnum; i++) {
            var addr = MLibelf.ccall('elf_nextscn', 'pointer',
                ['pointer', 'pointer'], [this.elf_ref, addr]);
            if (addr == 0)
                break;
            var shdr = this.getshdr(addr);
            var sh_name = this.strptr(ehdr.e_shstrndx, shdr.sh_name);
            if (shdr.sh_type == SHT_STRTAB && sh_name == '.dynstr') {
                scn_dynstr_index = i;
            }
            if (shdr.sh_type == SHT_DYNAMIC) {
                scn_dynamic_addr = addr;
                scn_dynamic_shdr = shdr;
            }
        }
        if (scn_dynamic_addr != 0) {
            scn_dynamic_data = this.getdata(scn_dynamic_addr);
        } else {
            return [];
        }

        /* Read dynamic entries */
        var dents = [];
        var count = scn_dynamic_shdr.sh_size / scn_dynamic_shdr.sh_entsize;
        for (var i = 0; i < count; i++) {
            dents.push(this.getdyn(scn_dynamic_data, i));
        }

        /* Comment dynamic entries */
        var elf = this;
        dents.forEach(function (dent) {
            switch (dent.d_tag) {
            case DT_NEEDED:
                if (typeof scn_dynstr_index !== "undefined")
                    dent.value = elf.strptr(scn_dynstr_index, dent.d_val);
                break;
            }
        });
        return dents;
    }
}
